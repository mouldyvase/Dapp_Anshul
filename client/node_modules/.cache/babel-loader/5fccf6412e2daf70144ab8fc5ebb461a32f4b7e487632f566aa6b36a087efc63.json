{"ast":null,"code":"import Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nconst getWeb3 = async () => {\n  // Detect MetaMask provider\n  const provider = await detectEthereumProvider();\n  if (provider) {\n    // Use MetaMask provider\n    window.web3 = new Web3(provider);\n    return window.web3;\n  } else {\n    // Use default provider\n    return new Web3(new Web3.providers.HttpProvider('http://localhost:7545'));\n  }\n};\nexport default getWeb3;","map":{"version":3,"names":["Web3","detectEthereumProvider","getWeb3","provider","window","web3","providers","HttpProvider"],"sources":["/Users/avamshigoutham/Downloads/New folder/client/src/web3.js"],"sourcesContent":["\r\nimport Web3 from 'web3';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nconst getWeb3 = async () => {\r\n  // Detect MetaMask provider\r\n  const provider = await detectEthereumProvider();\r\n\r\n  if (provider) {\r\n    // Use MetaMask provider\r\n    window.web3 = new Web3(provider);\r\n    return window.web3;\r\n  } else {\r\n    // Use default provider\r\n    return new Web3(new Web3.providers.HttpProvider('http://localhost:7545'));\r\n  }\r\n};\r\n\r\nexport default getWeb3;\r\n"],"mappings":"AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,sBAAsB,MAAM,2BAA2B;AAE9D,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B;EACA,MAAMC,QAAQ,GAAG,MAAMF,sBAAsB,CAAC,CAAC;EAE/C,IAAIE,QAAQ,EAAE;IACZ;IACAC,MAAM,CAACC,IAAI,GAAG,IAAIL,IAAI,CAACG,QAAQ,CAAC;IAChC,OAAOC,MAAM,CAACC,IAAI;EACpB,CAAC,MAAM;IACL;IACA,OAAO,IAAIL,IAAI,CAAC,IAAIA,IAAI,CAACM,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC,CAAC;EAC3E;AACF,CAAC;AAED,eAAeL,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}